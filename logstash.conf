input {
  # PostgreSQL logs (single file)
  file {
    mode => "tail"
    path => "/usr/share/logstash/ingest_data/database/postgresql.json"  # Absolute path to the PostgreSQL log
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_postgresql"
    codec => json  # JSON codec for structured data
    type => "database"
  }

  # Spring Boot general logs (app-log.log)
  file {
    mode => "tail"
    path => "/usr/share/logstash/ingest_data/backend/app-log.json"  # Absolute path to the general Spring log
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_app_log"
    codec => json  # JSON codec for structured data
    type => "backend"
  }

  # User action logs (profiling-log.json)
  file {
    mode => "tail"
    path => "/usr/share/logstash/ingest_data/backend/profiling-log.json"  # Absolute path to profiling log
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_profiling_log"
    codec => json  # JSON codec for structured data
    type => "profiling"
  }

  # New OpenTelemetry input
  http {
    host => "0.0.0.0"
    port => 4318
    codec => json
    type => "frontend"
  }
}

filter {
}

output {
  elasticsearch {
    index => "logstash-%{+YYYY.MM.dd}"  # Index name pattern
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    cacert => "certs/ca/ca.crt"
  }

  # Optional: Debug output to stdout to verify log parsing (remove in production)
  stdout {
    codec => rubydebug
  }
}
